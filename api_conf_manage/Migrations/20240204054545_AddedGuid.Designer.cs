// <auto-generated />
using System;
using Infrastructure.SQL.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace api_conf_manage.Migrations
{
    [DbContext(typeof(ConfContext))]
    [Migration("20240204054545_AddedGuid")]
    partial class AddedGuid
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.SQL.Database.Entities.AttendeeEntity", b =>
                {
                    b.Property<Guid>("AttendeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttendeeId");

                    b.ToTable("Attendees");
                });

            modelBuilder.Entity("Infrastructure.SQL.Database.Entities.OrganizerEntity", b =>
                {
                    b.Property<Guid>("OrganizerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganizerId");

                    b.ToTable("Organizers");
                });

            modelBuilder.Entity("Infrastructure.SQL.Database.Entities.RoomEntity", b =>
                {
                    b.Property<Guid>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Available")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Infrastructure.SQL.Database.Entities.SessionEntity", b =>
                {
                    b.Property<Guid>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("ConfDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("RoomEntityRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SpeakerEntitySpeakerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SessionId");

                    b.HasIndex("RoomEntityRoomId");

                    b.HasIndex("SpeakerEntitySpeakerId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Infrastructure.SQL.Database.Entities.Session_AttendeeEntity", b =>
                {
                    b.Property<Guid>("Session_AttendeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AttendeeEntityAttendeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SessionEntitySessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Session_AttendeeId");

                    b.HasIndex("AttendeeEntityAttendeeId");

                    b.HasIndex("SessionEntitySessionId");

                    b.ToTable("Session_AttendeeEntities");
                });

            modelBuilder.Entity("Infrastructure.SQL.Database.Entities.SpeakerEntity", b =>
                {
                    b.Property<Guid>("SpeakerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("University")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpeakerId");

                    b.ToTable("Speakers");
                });

            modelBuilder.Entity("Infrastructure.SQL.Database.Entities.SessionEntity", b =>
                {
                    b.HasOne("Infrastructure.SQL.Database.Entities.RoomEntity", "RoomEntity")
                        .WithMany("Sessions")
                        .HasForeignKey("RoomEntityRoomId");

                    b.HasOne("Infrastructure.SQL.Database.Entities.SpeakerEntity", "SpeakerEntity")
                        .WithMany("Sessions")
                        .HasForeignKey("SpeakerEntitySpeakerId");

                    b.Navigation("RoomEntity");

                    b.Navigation("SpeakerEntity");
                });

            modelBuilder.Entity("Infrastructure.SQL.Database.Entities.Session_AttendeeEntity", b =>
                {
                    b.HasOne("Infrastructure.SQL.Database.Entities.AttendeeEntity", "AttendeeEntity")
                        .WithMany("Session_AttendeeEntities")
                        .HasForeignKey("AttendeeEntityAttendeeId");

                    b.HasOne("Infrastructure.SQL.Database.Entities.SessionEntity", "SessionEntity")
                        .WithMany("Session_AttendeeEntities")
                        .HasForeignKey("SessionEntitySessionId");

                    b.Navigation("AttendeeEntity");

                    b.Navigation("SessionEntity");
                });

            modelBuilder.Entity("Infrastructure.SQL.Database.Entities.AttendeeEntity", b =>
                {
                    b.Navigation("Session_AttendeeEntities");
                });

            modelBuilder.Entity("Infrastructure.SQL.Database.Entities.RoomEntity", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("Infrastructure.SQL.Database.Entities.SessionEntity", b =>
                {
                    b.Navigation("Session_AttendeeEntities");
                });

            modelBuilder.Entity("Infrastructure.SQL.Database.Entities.SpeakerEntity", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
